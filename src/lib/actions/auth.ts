'use server'

import { revalidatePath } from 'next/cache'
import { redirect } from 'next/navigation'
import { createClient } from '@/lib/supabase/server' // Ensure path is correct

export async function signInWithGithub() {
  const supabase = createClient()
  // const origin = process.env.APP_BASE_URL // No longer needed here

  const { data, error } = await supabase.auth.signInWithOAuth({
    provider: 'github',
    options: { // Remove explicit options
      redirectTo: `${process.env.NEXT_PUBLIC_SUPABASE_REDIRECT_URL}/auth/callback`,
    },
  })

  if (error) {
    console.error('Error initiating GitHub sign in:', error)
    // Redirect back to login page with an error indicator
    return redirect('/?error=oauth_init_failed') 
  }

  if (data.url) {
    redirect(data.url) // Redirect the user to the GitHub authorization page (generated by Supabase)
  } else {
    console.error('No URL returned from signInWithOAuth')
    return redirect('/?error=oauth_no_url')
  }
}

// Simple sign out action
export async function signOut() {
  const supabase = createClient()
  await supabase.auth.signOut()
  revalidatePath('/', 'layout') // Revalidate all paths to clear cache
  redirect('/') // Redirect to login page after sign out
} 